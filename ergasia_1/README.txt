1η εργασία ΥΣΒΔ 

Μέλη Ομάδας:
	Τσαλαπάτης Αλέξανδρος 1115201900192
	Κοντός Αναστάσιος 1115201800080

Hash File:
	Κάθε hash file είναι ένα block file στο οποίου τα block γίνεται ειδική διαχείριση μέσω των hash file συναρτήσεων.

	To πρώτο block κάθε hash file περιέχει στα δεδομένα του με την σειρά:
		> Μια συμβολοσειρά "HF" που υπάρχει προκειμένου να μπορεί να γίνει εύκολα αντιληπτό οτί όντως πρόκειται για hash file
		> Έναν ακέραιο για το παγκόσμιο βάθος του hash table.
		> Ακέραιους για τα indeces των θέσεων των μπλοκ-ευρετηρίων μέσα στο hash file.

	Τα μπλοκ των ευρετηρίων περιέχουν:
		>Aκέραιους για τα indeces των θέσεων των bucket-blocks (blocks που περιέχουν records) στα οποία δείχνει το ευρετήριο

	Τα bucket-blocks περιέχουν με την σειρά:
		> Έναν ακέραιο για το τοπικό βάθος του bucket.
		> Έναν ακέραιο που δηλώνει το πλήθος εγγραφών
		> Records τα οποία είναι αποθηκευμένα στο εκάστοτε bucket.

Secondary Hash File:
	Κάθε Secondary Hash File στην ουσία είναι ένα hash file το οποίο κάνει handle SecondaryRecords και κάνει hash με βάση ένα
	attribute των record

	To πρώτο block κάθε secondary hash file περιέχει στα δεδομένα του με την σειρά:
		> Μια συμβολοσειρά "SHT" που υπάρχει προκειμένου να μπορεί να γίνει εύκολα αντιληπτό οτί όντως πρόκειται για hash file
		> Έναν ακέραιο για το παγκόσμιο βάθος του hash table.
		> Tο μήκος του ονόματος του αρχείου.
		> Το όνομα του αρχείου.
		> Το μήκος του πεδίου με βάση το οποίο κατακερματίζει.
		> Το όνομα του πεδίου κατακερματισμού.
		> Ακέραιους για τα indeces των θέσεων των μπλοκ-ευρετηρίων μέσα στο hash file.

	Τα μπλοκ των ευρετηρίων περιέχουν:
		>Aκέραιους για τα indeces των θέσεων των bucket-blocks (blocks που περιέχουν records) στα οποία δείχνει το ευρετήριο

	Τα bucket-blocks περιέχουν με την σειρά:
		> Έναν ακέραιο για το τοπικό βάθος του bucket.
		> Έναν ακέραιο που δηλώνει το πλήθος εγγραφών
		> Secondary Records τα οποία είναι αποθηκευμένα στο εκάστοτε bucket.

Μain:
	Στο παραδοτέο αρχείο περιλαμβάνονται 1 ενδεικτική main συνάρτηση (sht_main.c).
	Πριν την εκτέλεση του προγράμματος πρέπει να διαγραφούν τα αρχεία data.db/data2.db και shtdata.db/shtdata2.db που τυχών έχουν δημιουργηθεί από προηγούμενες εκτελέσεις.

	sht_main.c:
		Μεταγλώττιση: make sht
		Λειτουργικότητα: 
			> Δημιουργεί ένα ζευγάρι HT και SHT αρχεία κατακερματισμού.
			> Εισάγει πλήθος εγγραφών και στα δύο αρχεία από ένα αρχείο εγγραφών (records.txt)
			> Τυπώνει κάποιες εγγραφές και από τα δύο αρχεία.
			> Εισάγει μια ακόμα εγγραφή και στα δύο.
			> Τυπώνει την νέα εγγραφή του πρωτεύοντος και όλες τις εγγραφές και πεδίο κατακερματισμού ίδιο με της τελευταίας.
			> Τυπώνει στατιστικά για το ζευγάρι αρχείων.
			> Δημιουργεί άλλο ένα ζευγάρι HT και SHT αρχείων και εισάγει πλήθος εγγραφών σε αυτά.
			> Κάνει inner join τα 2 SHT αρχεία σε κάποια τιμή του πεδίου κατακερματισμού.
		

Παραδοχές και Σχόλια:
	> Θεωρούμε πως το μέγιστο πλήθος εγγραφών ανα bucket είναι BLOCK_SIZE / μέγεθος record = 8 εγγραφές.
	> Η περίπτωση overflow ενός bucket (λόγω πχ πολλαπλών εισαγωγών εγγραφών με ίδιο id) δεν έχει ληφθεί υπ'όψιν, συνεπώς δεν υπαρχεί υλοποίηση overflow blocks.
	> Overflow blocks δεν υπάρχουν ούτε στην υλοποίηση των SHT αρχείων.
	> Οι record εγγραφές κατακερματίζονται βάσει των depth λιγότερων σημαντίκών bits τους αντεστραμμένα (όπως στις διαφάνειες της παρουσίασης της εργασίας), ύστερα γίνεται μετατροπή του
αποτελέσματος στο δεκαδικό σύστημα για την πλοήγηση μέσα στα ευρετήρια.
	> Οι secondary record εγγραφές κατακερματίζονται βάσει των depth λιγότερων σημαντίκών bits του αθροίσματος των ascii κωδικών των πεδίου κατακερματισμού αντεστραμμένα (όπως στις διαφάνειες της παρουσίασης της εργασίας), ύστερα γίνεται μετατροπή του
αποτελέσματος στο δεκαδικό σύστημα για την πλοήγηση μέσα στα ευρετήρια.
    	>Οι αριθμοί των μπλοκ-ευρετηρίων αποθηκεύονται στο πρώτο μπλοκ του hash-file.Η υλοποίηση αυτή καλύπτει μέχρι 60 χιλιάδες εισαγωγές διότι μετά το πρώτο μπλοκ
    κάνει overflow.(Στην παρουασίαη είχε ειπωθεί το πρόγραμμα να λειτουργεί για τουλάχιστον 10-20χιλιαδες εγγραφές και αυτός είναι ο λογος που δν επεκτήναμε παραπάνω την υλοποίηση μας!)